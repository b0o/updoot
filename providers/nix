#!/usr/bin/env bash

# updoot unifies the update process for your entire system
#
# Copyright (c) 2018-2022 Maddison Hellstrom <github.com/b0o>
# MIT License

set -euo pipefail
IFS=$'\n\t'

# Force shellcheck to source ../updoot
true || source "../updoot"

function update_nix() {
  local opt OPTARG OPTIND
  OPTIND=1
  while getopts ":h" opt "$@"; do
    case "$opt" in
    h)
      # shellcheck disable=2119
      provider_usage
      return $C_USAGE
      ;;
    *)
      log_msg "${Err}${Cya}archlinux${RCol}: invalid option: ${Yel}${opt}${RCol}"
      return $C_USAGE_ERR
      ;;
    esac
  done

  if cmd_exists nix; then
    local sudo=
    [[ -O /nix/var/nix/gcroots ]] || sudo=sudo
    run_cmd $sudo nix-channel --update
    run_cmd $sudo nix-env -iA nixpkgs.nix
    run_cmd $sudo nix-env -u '*'
    if cmd_exists home-manager; then
      home-manager switch
    fi
    run_cmd $sudo nix-collect-garbage -d
  else
    return $C_DEP_NOTFOUND
  fi
}
register_provider update_nix nix << EOF
A purely functional package manager
Dependencies:
  Required:
    - nix (aur: nix) (https://nixos.org/nix)
    - sudo [if root is needed to manage nix] (arch-repo: sudo) (https://www.sudo.ws)
  Optional:
    - home-manager (https://github.com/rycee/home-manager)
EOF
